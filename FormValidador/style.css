@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

:root {
  --success-color: #2ecc71;
  --error-color: #e74c3c;
}

* {
  box-sizing: border-box; /*Para o padding não fazer exceder o limite de um elemento*/
}
body {
  background-color: #f9fafb;
  font-family: 'Roboto';
  display: flex; /* Para todos os childs fica com flex */
  align-items: center; /*vertical*/
  justify-content: center; /*horizontal*/
  min-height: 80vh; /*Para alinhar verticalmente tbm*/
  margin: 0;
}

h2 {
  text-align: center;
  margin: 0 0 20px;
}

.container {
  background-color: #fff;
  border-radius: 5px; /*deixar uma borda arredondada*/
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3); /*alpha: transparência*/
  width: 400px;
}

.form {
  padding: 30px 40px;
}

.form-control {
  margin-bottom: 10px;
  padding-bottom: 20px;
  position: relative; /*para posicionar um elemento absoluto, o elemento pai tem que ser relativo*/
}

.form-control label {
  color: #777;
  display: block;
  margin-bottom: 5px;
}

.form-control input {
  border: 2px solid #f0f0f0;
  border-radius: 4px;
  display: block;
  width: 100%;
  padding: 10px;
  font-size: 14px;
}

/*mudar o comportamento da propriedade focus*/
.form-control input:focus {
  outline: 0; /*retira a linha*/
  border-color: #777; /*mas coloco uma borda mais cinza para suavisar*/
}

/*setar uma cor diferente para o input caso tenha uma classe success*/
.form-control.success input {
  border-color: var(--success-color);
}

/*setar uma cor diferente para o input caso tenha uma classe error*/
.form-control.error input {
  border-color: var(--error-color);
}

.form-control small {
  color: var(--error-color);
  position: absolute;
  bottom: 0;
  left: 0;
  visibility: hidden;
}

.form-control.error small {
  visibility: visible;
}

.form button {
  cursor: pointer;
  background-color: #3498db;
  border: 2px solid #3498db;
  border-radius: 4px;
  color: #fff;
  display: block;
  font-size: 16px;
  padding: 10px;
  margin-top: 20px;
  width: 100%;
}
